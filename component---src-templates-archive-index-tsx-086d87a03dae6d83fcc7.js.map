{"version":3,"file":"component---src-templates-archive-index-tsx-086d87a03dae6d83fcc7.js","mappings":"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","sources":["webpack://aaron-blog/./src/templates/archive/nested-category.tsx","webpack://aaron-blog/./src/templates/archive/sub-category.tsx","webpack://aaron-blog/./src/templates/archive/main-category.tsx","webpack://aaron-blog/./src/templates/archive/index.tsx"],"sourcesContent":["import { css } from \"@emotion/react\"\nimport { Link } from \"gatsby\"\nimport * as React from \"react\"\nimport { CategoryArticle } from \".\"\nimport { CategoryLine, sliceStringWithMax, styles } from \"./main-category\"\n\nconst NestedCategoryArticles: React.FunctionComponent<{ maxTitleLength: number, categories: Array<CategoryArticle> }> = ({ maxTitleLength, categories }) => (\n  <React.Fragment>\n    {categories.map((each, index) => {\n      const subCategory = each.category // .join(' - ')\n      const notLastNestedCategory = index < (categories.length - 1)\n      return (\n        <NestedCategoryBox key={subCategory}>\n          <NestedCategoryTitle category={subCategory} articleCount={each.count} />\n          <ul css={styles.nestedArticles} key={subCategory}>\n            {notLastNestedCategory && <CategoryLine size=\"nested\" top={-21} left={21} plusHeight={44} />}\n            {each.articles.map(article => (\n              <li css={[styles.article, css`position: relative; left: 24px;`]} key={article.title}>\n                <Link css={styles.articleTitle} to={article.link}>\n                  {sliceStringWithMax(article.title, maxTitleLength)}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </NestedCategoryBox>\n      )\n    })}\n  </React.Fragment>\n)\n\nconst NestedCategoryBox: React.FunctionComponent<{\n  children: React.ReactNode, props?: any\n}> = ({ children, props }) => (\n  <div css={css`width: calc(100% - 34px); margin: 4px 0 0 auto;`} {...props}>\n    {children}\n  </div>\n)\n\nconst NestedCategoryDot = () => (\n  <div css={css`\n    display: flex;\n    flex-direction: row;\n    position: relative;\n    align-items: center;\n  `}>\n    <div css={css`width: 11px;`} />\n    <div css={css`\n      height: 2px;\n      width: 22px;\n      background-color: var(--text-link);\n    `}/>\n  </div>\n)\n\nconst NestedCategoryTitle: React.FunctionComponent<{\n  category: string,\n  articleCount: number,\n}> = ({ category, articleCount }) => (\n  <div css={[styles.subCategoryHeader, css`height: 20px;`]}>\n    <NestedCategoryDot />\n    <div css={[styles.nestedCategoryHeader, css`padding-left: 10px;`]}>\n      <span css={styles.categoryTitle}>{category}</span>\n      <div css={css`\n        margin: 0 10px;\n        height: 2px;\n        width: 100%;\n        background-color: var(--text-link);\n      `} />\n      <span css={[styles.categoryTitle, css`margin: 0 10px 0 auto;`]}>{articleCount}</span>\n    </div>\n  </div>\n)\n\nexport default NestedCategoryArticles","import { css } from \"@emotion/react\"\nimport { Link } from \"gatsby\"\nimport * as React from \"react\"\nimport { CategoryArticle } from \".\"\nimport { CategoryLine, sliceStringWithMax, styles } from \"./main-category\"\nimport NestedCategoryArticles from \"./nested-category\"\n\nconst SubCategoryArticles: React.FunctionComponent<{ maxTitleLength: number, categories: Array<CategoryArticle> }> = ({ maxTitleLength, categories }) => (\n  <React.Fragment>\n    {categories.map((each, index) => {\n      const subCategory = each.category // .join(' - ')\n      const notLastSubCategory = index < (categories.length - 1)\n      const hasNestedCategory = each.subCategories && (each.subCategories.length > 0)\n      let nestedHeightCorrection = 0;\n      if (each.subCategories) {\n        const numOfSubCategories = each.subCategories.length\n        const numOfSubArticles = each.subCategories.map(eachSubCategory =>\n          eachSubCategory.articles.length\n        ).reduce((accumulator, curr) => accumulator + curr, 0)\n        nestedHeightCorrection += numOfSubCategories * 36\n        nestedHeightCorrection += numOfSubArticles * 31\n      }\n      return (\n        <SubCategoryBox key={subCategory}>\n          <SubCategoryTitle category={subCategory} articleCount={each.count} />\n          <ul css={styles.articles} key={subCategory}>\n            {hasNestedCategory && <CategoryLine size=\"nested\" top={-4} left={55} plusHeight={25} />}\n            {notLastSubCategory && <CategoryLine size=\"sub\" top={-23} left={14} plusHeight={(66 + nestedHeightCorrection)} />}\n            {each.articles.map(article => (\n              <li css={[styles.article, css`position: relative; left: 40px;`]} key={article.title}>\n                <Link css={styles.articleTitle} to={article.link}>\n                  {sliceStringWithMax(article.title, maxTitleLength)}\n                </Link>\n              </li>\n            ))}\n          </ul>\n          {hasNestedCategory && <NestedCategoryArticles maxTitleLength={maxTitleLength - 3} categories={each.subCategories!} />}\n        </SubCategoryBox>\n      )\n    })}\n  </React.Fragment>\n)\n\nconst SubCategoryBox: React.FunctionComponent<{\n  children: React.ReactNode, props?: any\n}> = ({ children, props }) => (\n  <div {...props}>\n    {children}\n  </div>\n)\n\nconst SubCategoryDot = () => (\n  <div css={css`\n    display: flex;\n    flex-direction: row;\n    position: relative;\n    align-items: center;\n  `}>\n    <div css={css`width: 11px;`} />\n    <div css={css`\n      border-radius: 50%;\n      height: 8px;\n      width: 8px;\n      background-color: var(--text-link);\n    `}/>\n    <div css={css`\n      height: 2px;\n      width: 18px;\n      background-color: var(--text-link);\n    `}/>\n  </div>\n)\n\nconst SubCategoryTitle: React.FunctionComponent<{\n  category: string,\n  articleCount: number,\n}> = ({ category, articleCount }) => (\n  <div css={styles.subCategoryHeader}>\n    <SubCategoryDot />\n    <div css={[styles.categoryHeader, css`border: 1px solid var(--text-link); padding-left: 10px;`]}>\n      <strong css={styles.categoryTitle}>{category}</strong>\n      <span css={[styles.categoryTitle, css`margin: 0 10px 0 auto;`]}>{articleCount}</span>\n    </div>\n  </div>\n)\n\nexport default SubCategoryArticles","import { css } from \"@emotion/react\"\nimport styled from \"@emotion/styled\"\nimport { Link } from \"gatsby\"\nimport * as React from \"react\"\nimport { CategoryArticle } from \".\"\nimport SubCategoryArticles from \"./sub-category\"\n\nexport const CategoryLine = styled(`div`)<{ size: 'main' | 'sub' | 'nested' ,top: number, left: number, plusHeight: number }>(\n  ({ size, top, left, plusHeight: minusHeight }) => ({\n    content: '\"\"',\n    position: 'absolute',\n    top: `${top}px`,\n    left: `${left}px`,\n    height: `calc(100% + ${minusHeight}px)`,\n    width: '2px',\n    backgroundColor: 'var(--text-link)',\n    '@media only screen and (max-width: 700px)': {\n      top: `${top + (size === 'nested' ? 2 : (size === 'sub' ? 5 : 2))}px`,\n      height: `calc(100% + ${minusHeight - (size === 'nested' ? 2 : (size === 'sub' ? 36 : 6))}px)`,\n    },\n    '@media only screen and (max-width: 600px)': {\n      top: `${top + (size === 'nested' ? 4 : (size === 'sub' ? 7 : 3))}px`,\n      height: `calc(100% + ${minusHeight - (size === 'nested' ? 4 : (size === 'sub' ? 77 : 6))}px)`,\n    },\n  })\n)\n\nexport const sliceStringWithMax = (str: string, max: number) => \n  (str.length >= max)\n    ? `${str.slice(0, max)}...`\n    : str\n\nconst MainCategoryArticles: React.FunctionComponent<{ maxTitleLength: number, categories: Array<CategoryArticle> }> = ({ maxTitleLength, categories }) => (\n  <React.Fragment>\n    {categories.map(each => {\n      const mainCategory = each.category // .join(' - ')\n      const hasSubCategory = each.subCategories && (each.subCategories.length > 0)\n      return (\n        <MainCategoryBox key={mainCategory}>\n          <MainCategoryTitle category={mainCategory} articleCount={each.count} />\n          <ul css={styles.articles} key={mainCategory}>\n            {hasSubCategory && <CategoryLine size=\"main\" top={-4} left={14} plusHeight={30} />}\n            {each.articles.map(article => (\n              <li css={styles.article} key={article.title}>\n                <Link css={styles.articleTitle} to={article.link}>\n                  {sliceStringWithMax(article.title, maxTitleLength)}\n                </Link>\n              </li>\n            ))}\n          </ul>\n          {hasSubCategory && <SubCategoryArticles maxTitleLength={maxTitleLength - 3} categories={each.subCategories!} />}\n        </MainCategoryBox>\n      )\n    })}\n  </React.Fragment>\n)\n\nconst ChevronRight = () => (\n  <a css={css`position: relative; left: -5px`}>\n    <svg height=\"20\" viewBox=\"0 0 18 18\" width=\"24\" fill=\"var(--text-link)\">\n      <path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6-6-6z\"></path>\n    </svg>\n  </a>\n)\n\nconst MainCategoryTitle: React.FunctionComponent<{\n  category: string,\n  articleCount: number,\n}> = ({ category, articleCount }) => {\n  return (\n    <div css={[styles.categoryHeader, css`background-color: var(--text-link-background);`]}>\n      <ChevronRight />\n      <strong css={styles.categoryTitle}>{category}</strong>\n      <span css={[styles.categoryTitle, css`margin: 0 10px 0 auto;`]}>{articleCount}</span>\n    </div>\n  )\n}\n\nconst MainCategoryBox: React.FunctionComponent<{\n  children: React.ReactNode, props?: any\n}> = ({ children, props }) => (\n  <div css={[styles.categoryBox, css`margin: 0px 10px 10px;`]} {...props}>\n    {children}\n  </div>\n)\n\nexport const styles = {\n  categoryBox: css`\n    border: 1px solid var(--text-link);\n    border-radius: 10px;\n    padding: 10px;\n    \n    @media only screen and (max-width: 700px) {\n      margin: 8px;\n    }\n  `,\n  categoryHeader: css`\n    display: flex;\n    flex-wrap: wrap;\n    width: 100%;\n    justify-content: space-between;\n    font-size: 1.115rem;\n    color: var(--text-link);\n    border-radius: 5px;\n\n    @media only screen and (max-width: 700px) {\n      font-size: 1.015rem;\n    }\n  `,\n  categoryTitle: css`\n    min-width: fit-content;\n    font-size: 1.12rem;\n    @media only screen and (max-width: 700px) {\n      font-size: 1.015rem;\n    }\n  `,\n  subCategoryHeader: css`\n    display: flex;\n    flex-direction: row;\n  `,\n  nestedCategoryHeader: css`\n    display: flex;\n    width: 100%;\n    align-items: center;\n    justify-content: space-between;\n    font-size: 1.115rem;\n    color: var(--text-link);\n    border-radius: 5px;\n\n    @media only screen and (max-width: 700px) {\n      font-size: 1.015rem;\n    }\n  `,\n  articles: css`\n    position: relative;\n    top: -12px;\n    margin-bottom: -6px;\n  `,\n  nestedArticles: css`\n    position: relative;\n    top: -8px;\n    margin-bottom: 6px;\n  `,\n  article: css`\n    font-weight: 100;\n    font-size: 0.96rem;\n    @media only screen and (max-width: 700px) {\n      font-size: 0.90rem;\n    }\n  `,\n  articleTitle: css`\n    display: flex;\n    color: var(--text);\n  `,\n}\n\nexport default MainCategoryArticles","import * as React from \"react\"\nimport { css } from \"@emotion/react\"\nimport MainCategoryArticles from \"./main-category\"\nimport { getWindowDimensions } from \"../../components/layout\"\nimport { useEffect, useState } from \"react\"\nimport { graphql } from \"gatsby\"\n\nexport interface Article {\n  id: string,\n  categoryNames: Array<string>,\n  date: string,\n  \n  title: string,\n  link: string,\n}\n\nexport interface CategoryArticle {\n  category: string\n  path: string\n  articles: Array<Article>\n  count: number\n  subCategories?: Array<CategoryArticle>\n}\n\ninterface Node {\n  node: {\n    childMdx: NodeArticle\n  }\n}\n\ninterface NodeArticle {\n  id: string \n  slug: string\n  frontmatter: {\n    title: string /* 제목에 해당합니다. */\n    category: string /* js */\n    categoryNames: Array<string> /* Javascript */\n    date: string /* MMMM D, YYYY */\n  }\n}\ninterface Props {\n  data: {\n    allFile: {\n      edges: Array<Node>\n    }\n  }\n}\n\nconst sortingCategorizing = (edges: Array<Node>) => {\n  // const categoryMap = {}\n  const categoryMap: Array<CategoryArticle> = []\n  edges.forEach(edge => {\n    const categories = edge.node.childMdx.frontmatter.categoryNames\n    const totalCategories = categories.length\n    const article = edge.node.childMdx\n    // console.log(Object.keys(categoryMap))\n    searchAndAppendCategory(0, categories, categoryMap, article)\n  })\n  // console.log(JSON.stringify(categoryMap))\n\n  return categoryMap\n}\n\nconst convertNodeArticleToSimpleArticle = (nodeArticle: NodeArticle): Article => {\n  return {\n    id: nodeArticle.id,\n    categoryNames: nodeArticle.frontmatter.categoryNames,\n    date: nodeArticle.frontmatter.date,\n    \n    title: nodeArticle.frontmatter.title,\n    link: nodeArticle.slug,\n  }\n}\n\n// CategoryArticle\nconst searchAndAppendCategory = (index: number, categories: Array<string>, categoryMap: Array<CategoryArticle>, article: NodeArticle) => {\n  console.log(categories)\n  const totalCategory = categories.length\n  const currentCategory = categories[index]\n\n  let done = false;\n  for (let writtenCategoryMap of categoryMap) {\n    // const writtenCategoryMap = categoryMap[writtenCategory]\n    if (writtenCategoryMap.category === currentCategory) {\n      // * 존재\n      if ((index + 1) < totalCategory) {\n        if (!writtenCategoryMap.subCategories) { writtenCategoryMap.subCategories = [] }\n        searchAndAppendCategory(index + 1, categories, writtenCategoryMap.subCategories, article)\n        done = true\n      } else {\n        writtenCategoryMap.path = `/${article.frontmatter.category}`\n        writtenCategoryMap.articles.push(convertNodeArticleToSimpleArticle(article))\n        writtenCategoryMap.count += 1\n        return\n      }\n    }\n  }\n  if (!done) {\n    // * 비존재\n    if ((index + 1) < totalCategory) {\n      const created = {\n        category: currentCategory,\n        path: `/${article.frontmatter.category}`,\n        articles: [],\n        count: 1,\n        subCategories: [],\n      }\n      categoryMap.push(created)\n      searchAndAppendCategory(index + 1, categories, created.subCategories, article)\n    } else {\n      const created = {\n        category: currentCategory,\n        path: `/${article.frontmatter.category}`,\n        articles: [convertNodeArticleToSimpleArticle(article)],\n        count: 1,\n        subCategories: [],\n      }\n      categoryMap.push(created)\n      return\n    }\n  }\n}\n\nconst calculateMaxArticleTitleLength = (width : number) => {\n  if (width <= 500) {\n    return 42\n  } else if (width <= 600) {\n    return 48\n  } else if (width <= 700) {\n    return 57\n  } else if (width <= 800) {\n    return 60\n  } else if (width <= 800) {\n    return 62\n  } else if (width <= 900) {\n    return 64\n  } else {\n    return 80\n  }\n}\n\nconst ArchiveTemplate: React.FunctionComponent<Props> = ({ data: { allFile: { edges } }}) => {\n  const categorized = sortingCategorizing(edges)\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions())\n  const [maxArticleTitleLength, setMaxArticleTitleLength] = useState(calculateMaxArticleTitleLength(windowDimensions.width))\n\n  useEffect(() => {\n    let mounted = true;\n    window.addEventListener('resize', () => {\n      if (mounted) {\n        const current = getWindowDimensions()\n        setWindowDimensions(current)\n        setMaxArticleTitleLength(calculateMaxArticleTitleLength(current.width))\n      }\n    });\n    return () => { mounted = false; };\n  }, []);\n\n  return (\n    <article>\n      <div css={styles.body}>\n        {/* <MainCategoryArticles maxTitleLength={maxArticleTitleLength} categories={categories} /> */}\n        <MainCategoryArticles maxTitleLength={maxArticleTitleLength} categories={categorized} />\n      </div>\n    </article>\n  )\n}\n\nconst styles = {\n  body: css`\n    margin: 4rem auto 2rem;\n    padding: 0 1rem;\n    width: 100%;\n    max-width: 900px;\n    line-height: 2;\n    font-size: 1.0rem;\n\n    @media only screen and (max-width: 700px) {\n      padding: 0;\n      font-size: 0.84rem;\n    }\n\n    p,\n    ul,\n    ol {\n      overflow-wrap: break-word;\n      word-wrap: break-word;\n      word-break: break-all;\n      word-break: break-word;\n      hyphens: auto;\n    }\n\n    ul,\n    ol {\n      padding-left: 4rem;\n      @media only screen and (max-width: 700px) {\n        padding-left: 3rem;\n      }\n\n      ul,\n      ol {\n        margin-bottom: 0;\n      }\n    }\n\n    blockquote {\n      margin-left: 2.1rem;\n      margin-right: 0;\n      font-size: 0.9rem;\n    }\n\n    img {\n      max-width: 100%;\n    }\n\n    hr {\n      position: relative;\n      margin: 2.848rem auto 2.848rem;\n      padding: 0;\n      border: none;\n      width: 20px;\n      height: 20px;\n      background: none;\n\n      &::after {\n        content: '\\u2666';\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n      }\n    }\n\n    h1,\n    h2 {\n      // margin: 1.6rem 0 0 0;\n      margin: 2.3rem 0 0 0;\n      @media only screen and (max-width: 700px) {\n        margin: 2rem 0 1rem 0;\n      }\n      line-height: 1.6;\n      font-weight: 400;\n      scroll-margin-top: 5rem;\n    }\n\n    h2 {\n      font-size: 1.296rem;\n      font-weight: 600;\n      height: 2.3rem;\n      border-bottom: 2px solid var(--text-link);\n      @media only screen and (max-width: 700px) {\n        font-size: 1.196rem;\n      }\n    }\n\n    h3 {\n      font-size: 1.115rem;\n      @media only screen and (max-width: 700px) {\n        font-size: 1.015rem;\n      }\n    }\n\n    h4 {\n      font-size: 1.138rem;\n      @media only screen and (max-width: 700px) {\n        font-size: 1.038rem;\n      }\n    }\n\n    h5 {\n      font-size: 1.067rem;\n      @media only screen and (max-width: 700px) {\n        font-size: 0.967rem;\n      }\n    }\n\n    small {\n      font-size: 0.937rem;\n      @media only screen and (max-width: 700px) {\n        font-size: 0.837rem;\n      }\n    }\n\n    .gatsby-highlight {\n      margin-bottom: 1.602rem;\n    }\n\n    [data-language] {\n      ::before {\n        content: attr(data-language);\n        display: flex;\n        justify-content: flex-end;\n        margin-right: 0.8rem;\n        margin-bottom: -2rem;\n        letter-spacing: 0.05rem;\n        font-size: 0.75rem;\n        text-transform: uppercase;\n        color: var(--text-placeholder);\n      }\n    }\n\n    .gatsby-code-title {\n      margin-left: 0.2rem;\n      margin-bottom: 0.5rem;\n      text-align: left;\n      font-size: 0.8rem;\n      font-family: 'Fira Code', 'Consolas', 'Menlo', 'Monaco', 'Andale Mono WT',\n        'Andale Mono', 'Lucida Console', 'Lucida Sans Typewriter',\n        'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Liberation Mono',\n        'Nimbus Mono L', 'Courier New', 'Courier', monospace;\n      color: var(--text-auxiliary);\n    }\n  `,\n}\n\n\nexport const query = graphql`\n  query($nodeCategory: String!, $nodePath: String!) {\n    allFile(\n      filter: {\n        sourceInstanceName: { eq: $nodeCategory }\n        extension: { eq: \"mdx\" }\n        childMdx: { frontmatter: { category: { eq: $nodePath } } }\n      }\n    ) {\n      edges {\n        node {\n          childMdx {\n            id\n            slug\n            frontmatter {\n              date(formatString: \"MMMM D, YYYY\")\n              title\n              category\n              categoryNames\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default ArchiveTemplate\n"],"names":["NestedCategoryBox","children","props","_jsx","css","NestedCategoryDot","_jsxs","NestedCategoryTitle","category","articleCount","styles","subCategoryHeader","nestedCategoryHeader","categoryTitle","maxTitleLength","categories","React","map","each","index","subCategory","notLastNestedCategory","length","count","nestedArticles","CategoryLine","size","top","left","plusHeight","articles","article","Link","articleTitle","to","link","sliceStringWithMax","title","SubCategoryBox","SubCategoryDot","SubCategoryTitle","categoryHeader","notLastSubCategory","hasNestedCategory","subCategories","nestedHeightCorrection","eachSubCategory","reduce","accumulator","curr","NestedCategoryArticles","minusHeight","content","position","height","width","backgroundColor","str","max","slice","ChevronRight","viewBox","fill","d","MainCategoryTitle","MainCategoryBox","categoryBox","mainCategory","hasSubCategory","SubCategoryArticles","convertNodeArticleToSimpleArticle","nodeArticle","id","categoryNames","frontmatter","date","slug","searchAndAppendCategory","categoryMap","console","log","totalCategory","currentCategory","done","writtenCategoryMap","path","push","created","calculateMaxArticleTitleLength","body","data","allFile","edges","categorized","forEach","edge","node","childMdx","sortingCategorizing","windowDimensions","setWindowDimensions","useState","getWindowDimensions","maxArticleTitleLength","setMaxArticleTitleLength","useEffect","mounted","window","addEventListener","current","MainCategoryArticles"],"sourceRoot":""}